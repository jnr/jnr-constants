// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated 2018-09-10 23:22:06 +0200
package jnr.constants.platform.linux;
public enum SocketOption implements jnr.constants.Constant {
SO_DEBUG(0x1L),
SO_ACCEPTCONN(0x1eL),
SO_REUSEADDR(0x2L),
SO_KEEPALIVE(0x9L),
SO_DONTROUTE(0x5L),
SO_BROADCAST(0x6L),
// SO_USELOOPBACK not defined
SO_LINGER(0xdL),
SO_OOBINLINE(0xaL),
SO_REUSEPORT(0xfL),
SO_TIMESTAMP(0x1dL),
// SO_ACCEPTFILTER not defined
// SO_DONTTRUNC not defined
// SO_WANTMORE not defined
// SO_WANTOOBFLAG not defined
SO_SNDBUF(0x7L),
SO_RCVBUF(0x8L),
SO_SNDLOWAT(0x13L),
SO_RCVLOWAT(0x12L),
SO_SNDTIMEO(0x15L),
SO_RCVTIMEO(0x14L),
SO_ERROR(0x4L),
SO_TYPE(0x3L),
// SO_NREAD not defined
// SO_NKE not defined
// SO_NOSIGPIPE not defined
// SO_NOADDRERR not defined
// SO_NWRITE not defined
// SO_REUSESHAREUID not defined
// SO_LABEL not defined
// SO_PEERLABEL not defined
SO_ATTACH_FILTER(0x1aL),
SO_BINDTODEVICE(0x19L),
SO_DETACH_FILTER(0x1bL),
SO_NO_CHECK(0xbL),
SO_PASSCRED(0x10L),
SO_PEERCRED(0x11L),
SO_PEERNAME(0x1cL),
SO_PRIORITY(0xcL),
SO_SECURITY_AUTHENTICATION(0x16L),
SO_SECURITY_ENCRYPTION_NETWORK(0x18L),
SO_SECURITY_ENCRYPTION_TRANSPORT(0x17L);
private final long value;
private SocketOption(long value) { this.value = value; }
public static final long MIN_VALUE = 0x1L;
public static final long MAX_VALUE = 0x1eL;

static final class StringTable {
  public static final java.util.Map<SocketOption, String> descriptions = generateTable();
  public static final java.util.Map<SocketOption, String> generateTable() {
    java.util.Map<SocketOption, String> map = new java.util.EnumMap<SocketOption, String>(SocketOption.class);
  map.put(SO_DEBUG, "SO_DEBUG");
  map.put(SO_ACCEPTCONN, "SO_ACCEPTCONN");
  map.put(SO_REUSEADDR, "SO_REUSEADDR");
  map.put(SO_KEEPALIVE, "SO_KEEPALIVE");
  map.put(SO_DONTROUTE, "SO_DONTROUTE");
  map.put(SO_BROADCAST, "SO_BROADCAST");
  map.put(SO_LINGER, "SO_LINGER");
  map.put(SO_OOBINLINE, "SO_OOBINLINE");
  map.put(SO_REUSEPORT, "SO_REUSEPORT");
  map.put(SO_TIMESTAMP, "SO_TIMESTAMP");
  map.put(SO_SNDBUF, "SO_SNDBUF");
  map.put(SO_RCVBUF, "SO_RCVBUF");
  map.put(SO_SNDLOWAT, "SO_SNDLOWAT");
  map.put(SO_RCVLOWAT, "SO_RCVLOWAT");
  map.put(SO_SNDTIMEO, "SO_SNDTIMEO");
  map.put(SO_RCVTIMEO, "SO_RCVTIMEO");
  map.put(SO_ERROR, "SO_ERROR");
  map.put(SO_TYPE, "SO_TYPE");
  map.put(SO_ATTACH_FILTER, "SO_ATTACH_FILTER");
  map.put(SO_BINDTODEVICE, "SO_BINDTODEVICE");
  map.put(SO_DETACH_FILTER, "SO_DETACH_FILTER");
  map.put(SO_NO_CHECK, "SO_NO_CHECK");
  map.put(SO_PASSCRED, "SO_PASSCRED");
  map.put(SO_PEERCRED, "SO_PEERCRED");
  map.put(SO_PEERNAME, "SO_PEERNAME");
  map.put(SO_PRIORITY, "SO_PRIORITY");
  map.put(SO_SECURITY_AUTHENTICATION, "SO_SECURITY_AUTHENTICATION");
  map.put(SO_SECURITY_ENCRYPTION_NETWORK, "SO_SECURITY_ENCRYPTION_NETWORK");
  map.put(SO_SECURITY_ENCRYPTION_TRANSPORT, "SO_SECURITY_ENCRYPTION_TRANSPORT");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int intValue() { return (int) value; }
public final long longValue() { return value; }
public final boolean defined() { return true; }
}
