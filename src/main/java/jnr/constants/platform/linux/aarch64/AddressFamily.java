// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated 2021-10-12 23:15:34 +0200
package jnr.constants.platform.linux.aarch64;
public enum AddressFamily implements jnr.constants.Constant {
AF_UNSPEC(0L),
AF_LOCAL(1L),
AF_UNIX(1L),
AF_INET(2L),
// AF_IMPLINK not defined
// AF_PUP not defined
// AF_CHAOS not defined
// AF_NS not defined
// AF_ISO not defined
// AF_OSI not defined
// AF_ECMA not defined
// AF_DATAKIT not defined
// AF_CCITT not defined
AF_SNA(22L),
AF_DECnet(12L),
// AF_DLI not defined
// AF_LAT not defined
// AF_HYLINK not defined
AF_APPLETALK(5L),
AF_ROUTE(16L),
// AF_LINK not defined
// pseudo_AF_XTP not defined
// AF_COIP not defined
// AF_CNT not defined
// pseudo_AF_RTIP not defined
AF_IPX(4L),
// AF_SIP not defined
// pseudo_AF_PIP not defined
// AF_NDRV not defined
AF_ISDN(34L),
// AF_E164 not defined
// pseudo_AF_KEY not defined
AF_INET6(10L),
// AF_NATM not defined
// AF_SYSTEM not defined
// AF_NETBIOS not defined
// AF_PPP not defined
// AF_ATM not defined
// pseudo_AF_HDRCMPLT not defined
// AF_NETGRAPH not defined
AF_AX25(3L),
AF_KEY(15L),
AF_NETLINK(16L),
AF_RDS(21L),
AF_PPPOX(24L),
AF_LLC(26L),
AF_IB(27L),
AF_MPLS(28L),
AF_CAN(29L),
AF_TIPC(30L),
AF_BLUETOOTH(31L),
AF_ALG(38L),
AF_VSOCK(40L),
AF_KCM(41L),
AF_XDP(44L),
AF_MAX(45L);
private final long value;
private AddressFamily(long value) { this.value = value; }
public static final long MIN_VALUE = 0L;
public static final long MAX_VALUE = 45L;

static final class StringTable {
  public static final java.util.Map<AddressFamily, String> descriptions = generateTable();
  public static final java.util.Map<AddressFamily, String> generateTable() {
    java.util.Map<AddressFamily, String> map = new java.util.EnumMap<AddressFamily, String>(AddressFamily.class);
  map.put(AF_UNSPEC, "AF_UNSPEC");
  map.put(AF_LOCAL, "AF_LOCAL");
  map.put(AF_UNIX, "AF_UNIX");
  map.put(AF_INET, "AF_INET");
  map.put(AF_SNA, "AF_SNA");
  map.put(AF_DECnet, "AF_DECnet");
  map.put(AF_APPLETALK, "AF_APPLETALK");
  map.put(AF_ROUTE, "AF_ROUTE");
  map.put(AF_IPX, "AF_IPX");
  map.put(AF_ISDN, "AF_ISDN");
  map.put(AF_INET6, "AF_INET6");
  map.put(AF_AX25, "AF_AX25");
  map.put(AF_KEY, "AF_KEY");
  map.put(AF_NETLINK, "AF_NETLINK");
  map.put(AF_RDS, "AF_RDS");
  map.put(AF_PPPOX, "AF_PPPOX");
  map.put(AF_LLC, "AF_LLC");
  map.put(AF_IB, "AF_IB");
  map.put(AF_MPLS, "AF_MPLS");
  map.put(AF_CAN, "AF_CAN");
  map.put(AF_TIPC, "AF_TIPC");
  map.put(AF_BLUETOOTH, "AF_BLUETOOTH");
  map.put(AF_ALG, "AF_ALG");
  map.put(AF_VSOCK, "AF_VSOCK");
  map.put(AF_KCM, "AF_KCM");
  map.put(AF_XDP, "AF_XDP");
  map.put(AF_MAX, "AF_MAX");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int value() { return (int) value; }
public final int intValue() { return (int) value; }
public final long longValue() { return value; }
public final boolean defined() { return true; }
}
