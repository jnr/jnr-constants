// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated 2018-09-10 23:45:04 +0200
package jnr.constants.platform.solaris;
public enum AddressFamily implements jnr.constants.Constant {
AF_UNSPEC(0L),
AF_LOCAL(1L),
AF_UNIX(1L),
AF_INET(2L),
AF_IMPLINK(3L),
AF_PUP(4L),
AF_CHAOS(5L),
AF_NS(6L),
// AF_ISO not defined
AF_OSI(19L),
AF_ECMA(8L),
AF_DATAKIT(9L),
AF_CCITT(10L),
AF_SNA(11L),
AF_DECnet(12L),
AF_DLI(13L),
AF_LAT(14L),
AF_HYLINK(15L),
AF_APPLETALK(16L),
AF_ROUTE(24L),
AF_LINK(25L),
// pseudo_AF_XTP not defined
// AF_COIP not defined
// AF_CNT not defined
// pseudo_AF_RTIP not defined
AF_IPX(23L),
// AF_SIP not defined
// pseudo_AF_PIP not defined
// AF_NDRV not defined
// AF_ISDN not defined
// AF_E164 not defined
// pseudo_AF_KEY not defined
AF_INET6(26L),
// AF_NATM not defined
// AF_SYSTEM not defined
// AF_NETBIOS not defined
// AF_PPP not defined
// AF_ATM not defined
// pseudo_AF_HDRCMPLT not defined
// AF_NETGRAPH not defined
// AF_AX25 not defined
AF_MAX(34L);
private final long value;
private AddressFamily(long value) { this.value = value; }
public static final long MIN_VALUE = 0L;
public static final long MAX_VALUE = 34L;

static final class StringTable {
  public static final java.util.Map<AddressFamily, String> descriptions = generateTable();
  public static final java.util.Map<AddressFamily, String> generateTable() {
    java.util.Map<AddressFamily, String> map = new java.util.EnumMap<AddressFamily, String>(AddressFamily.class);
  map.put(AF_UNSPEC, "AF_UNSPEC");
  map.put(AF_LOCAL, "AF_LOCAL");
  map.put(AF_UNIX, "AF_UNIX");
  map.put(AF_INET, "AF_INET");
  map.put(AF_IMPLINK, "AF_IMPLINK");
  map.put(AF_PUP, "AF_PUP");
  map.put(AF_CHAOS, "AF_CHAOS");
  map.put(AF_NS, "AF_NS");
  map.put(AF_OSI, "AF_OSI");
  map.put(AF_ECMA, "AF_ECMA");
  map.put(AF_DATAKIT, "AF_DATAKIT");
  map.put(AF_CCITT, "AF_CCITT");
  map.put(AF_SNA, "AF_SNA");
  map.put(AF_DECnet, "AF_DECnet");
  map.put(AF_DLI, "AF_DLI");
  map.put(AF_LAT, "AF_LAT");
  map.put(AF_HYLINK, "AF_HYLINK");
  map.put(AF_APPLETALK, "AF_APPLETALK");
  map.put(AF_ROUTE, "AF_ROUTE");
  map.put(AF_LINK, "AF_LINK");
  map.put(AF_IPX, "AF_IPX");
  map.put(AF_INET6, "AF_INET6");
  map.put(AF_MAX, "AF_MAX");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int intValue() { return (int) value; }
public final long longValue() { return value; }
public final boolean defined() { return true; }
}
