// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated 2018-09-08 08:53:57 +0200
package jnr.constants.platform.windows;
public enum Errno implements jnr.constants.Constant {
EPERM(1L),
ENOENT(2L),
ESRCH(3L),
EINTR(4L),
EIO(5L),
ENXIO(6L),
E2BIG(7L),
ENOEXEC(8L),
EBADF(9L),
ECHILD(10L),
EAGAIN(11L),
ENOMEM(12L),
EACCES(13L),
EFAULT(14L),
// ENOTBLK not defined
EBUSY(16L),
EEXIST(17L),
EXDEV(18L),
ENODEV(19L),
ENOTDIR(20L),
EISDIR(21L),
EINVAL(22L),
ENFILE(23L),
EMFILE(24L),
ENOTTY(25L),
// ETXTBSY not defined
EFBIG(27L),
ENOSPC(28L),
ESPIPE(29L),
EROFS(30L),
EMLINK(31L),
EPIPE(32L),
EDOM(33L),
ERANGE(34L),
EDEADLK(36L),
ENAMETOOLONG(38L),
ENOLCK(39L),
ENOSYS(40L),
ENOTEMPTY(41L),
// ELOOP not defined
// EWOULDBLOCK not defined
// ENOMSG not defined
// EIDRM not defined
// ECHRNG not defined
// EL2NSYNC not defined
// EL3HLT not defined
// EL3RST not defined
// ELNRNG not defined
// EUNATCH not defined
// ENOCSI not defined
// EL2HLT not defined
// EBADE not defined
// EBADR not defined
// EXFULL not defined
// ENOANO not defined
// EBADRQC not defined
// EBADSLT not defined
EDEADLOCK(36L),
// EBFONT not defined
// ENOSTR not defined
// ENODATA not defined
// ETIME not defined
// ENOSR not defined
// ENONET not defined
// ENOPKG not defined
// EREMOTE not defined
// ENOLINK not defined
// EADV not defined
// ESRMNT not defined
// ECOMM not defined
// EPROTO not defined
// EMULTIHOP not defined
// EDOTDOT not defined
// EBADMSG not defined
// EOVERFLOW not defined
// ENOTUNIQ not defined
// EBADFD not defined
// EREMCHG not defined
// ELIBACC not defined
// ELIBBAD not defined
// ELIBSCN not defined
// ELIBMAX not defined
// ELIBEXEC not defined
EILSEQ(42L);
// ERESTART not defined
// ESTRPIPE not defined
// EUSERS not defined
// ENOTSOCK not defined
// EDESTADDRREQ not defined
// EMSGSIZE not defined
// EPROTOTYPE not defined
// ENOPROTOOPT not defined
// EPROTONOSUPPORT not defined
// ESOCKTNOSUPPORT not defined
// EOPNOTSUPP not defined
// EPFNOSUPPORT not defined
// EAFNOSUPPORT not defined
// EADDRINUSE not defined
// EADDRNOTAVAIL not defined
// ENETDOWN not defined
// ENETUNREACH not defined
// ENETRESET not defined
// ECONNABORTED not defined
// ECONNRESET not defined
// ENOBUFS not defined
// EISCONN not defined
// ENOTCONN not defined
// ESHUTDOWN not defined
// ETOOMANYREFS not defined
// ETIMEDOUT not defined
// ECONNREFUSED not defined
// EHOSTDOWN not defined
// EHOSTUNREACH not defined
// EALREADY not defined
// EINPROGRESS not defined
// ESTALE not defined
// EUCLEAN not defined
// ENOTNAM not defined
// ENAVAIL not defined
// EISNAM not defined
// EREMOTEIO not defined
// EDQUOT not defined
// ECANCELED not defined
// EKEYEXPIRED not defined
// EKEYREJECTED not defined
// EKEYREVOKED not defined
// EMEDIUMTYPE not defined
// ENOKEY not defined
// ENOMEDIUM not defined
// ENOTRECOVERABLE not defined
// EOWNERDEAD not defined
// ERFKILL not defined
// EAUTH not defined
// EBADRPC not defined
// EDOOFUS not defined
// EFTYPE not defined
// ENEEDAUTH not defined
// ENOATTR not defined
// ENOTSUP not defined
// EPROCLIM not defined
// EPROCUNAVAIL not defined
// EPROGMISMATCH not defined
// EPROGUNAVAIL not defined
// ERPCMISMATCH not defined
// EIPSEC not defined
// EHWPOISON not defined
// ECAPMODE not defined
// ENOTCAPABLE not defined
private final long value;
private Errno(long value) { this.value = value; }
public static final long MIN_VALUE = 1L;
public static final long MAX_VALUE = 42L;

static final class StringTable {
  public static final java.util.Map<Errno, String> descriptions = generateTable();
  public static final java.util.Map<Errno, String> generateTable() {
    java.util.Map<Errno, String> map = new java.util.EnumMap<Errno, String>(Errno.class);
  map.put(EPERM, "Operation not permitted");
  map.put(ENOENT, "No such file or directory");
  map.put(ESRCH, "No such process");
  map.put(EINTR, "Interrupted function call");
  map.put(EIO, "Input/output error");
  map.put(ENXIO, "No such device or address");
  map.put(E2BIG, "Arg list too long");
  map.put(ENOEXEC, "Exec format error");
  map.put(EBADF, "Bad file descriptor");
  map.put(ECHILD, "No child processes");
  map.put(EAGAIN, "Resource temporarily unavailable");
  map.put(ENOMEM, "Not enough space");
  map.put(EACCES, "Permission denied");
  map.put(EFAULT, "Bad address");
  map.put(EBUSY, "Resource device");
  map.put(EEXIST, "File exists");
  map.put(EXDEV, "Improper link");
  map.put(ENODEV, "No such device");
  map.put(ENOTDIR, "Not a directory");
  map.put(EISDIR, "Is a directory");
  map.put(EINVAL, "Invalid argument");
  map.put(ENFILE, "Too many open files in system");
  map.put(EMFILE, "Too many open files");
  map.put(ENOTTY, "Inappropriate I/O control operation");
  map.put(EFBIG, "File too large");
  map.put(ENOSPC, "No space left on device");
  map.put(ESPIPE, "Invalid seek");
  map.put(EROFS, "Read-only file system");
  map.put(EMLINK, "Too many links");
  map.put(EPIPE, "Broken pipe");
  map.put(EDOM, "Domain error");
  map.put(ERANGE, "Result too large");
  map.put(EDEADLK, "Resource deadlock avoided");
  map.put(ENAMETOOLONG, "Filename too long");
  map.put(ENOLCK, "No locks available");
  map.put(ENOSYS, "Function not implemented");
  map.put(ENOTEMPTY, "Directory not empty");
  map.put(EDEADLOCK, "Resource deadlock avoided");
  map.put(EILSEQ, "Illegal byte sequence");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int intValue() { return (int) value; }
public final long longValue() { return value; }
public final boolean defined() { return true; }
}
