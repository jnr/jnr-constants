// WARNING: This file is autogenerated. DO NOT EDIT!
// Generated 2021-10-08 17:37:36 +0200
package jnr.constants.platform.freebsd.aarch64;
public enum ErrnoAddressInfo implements jnr.constants.Constant {
EAI_AGAIN(2L),
// EAI_ADDRFAMILY not defined
EAI_BADFLAGS(3L),
EAI_FAIL(4L),
EAI_FAMILY(5L),
EAI_MEMORY(6L),
// EAI_NODATA not defined
EAI_NONAME(8L),
EAI_OVERFLOW(14L),
EAI_SERVICE(9L),
EAI_SOCKTYPE(10L),
EAI_SYSTEM(11L),
EAI_BADHINTS(12L),
EAI_PROTOCOL(13L),
EAI_MAX(15L);
private final long value;
private ErrnoAddressInfo(long value) { this.value = value; }
public static final long MIN_VALUE = 2L;
public static final long MAX_VALUE = 15L;

static final class StringTable {
  public static final java.util.Map<ErrnoAddressInfo, String> descriptions = generateTable();
  public static final java.util.Map<ErrnoAddressInfo, String> generateTable() {
    java.util.Map<ErrnoAddressInfo, String> map = new java.util.EnumMap<ErrnoAddressInfo, String>(ErrnoAddressInfo.class);
  map.put(EAI_AGAIN, "EAI_AGAIN");
  map.put(EAI_BADFLAGS, "EAI_BADFLAGS");
  map.put(EAI_FAIL, "EAI_FAIL");
  map.put(EAI_FAMILY, "EAI_FAMILY");
  map.put(EAI_MEMORY, "EAI_MEMORY");
  map.put(EAI_NONAME, "EAI_NONAME");
  map.put(EAI_OVERFLOW, "EAI_OVERFLOW");
  map.put(EAI_SERVICE, "EAI_SERVICE");
  map.put(EAI_SOCKTYPE, "EAI_SOCKTYPE");
  map.put(EAI_SYSTEM, "EAI_SYSTEM");
  map.put(EAI_BADHINTS, "EAI_BADHINTS");
  map.put(EAI_PROTOCOL, "EAI_PROTOCOL");
  map.put(EAI_MAX, "EAI_MAX");
    return map;
  }
}
public final String toString() { return StringTable.descriptions.get(this); }
public final int value() { return (int) value; }
public final int intValue() { return (int) value; }
public final long longValue() { return value; }
public final boolean defined() { return true; }
}
